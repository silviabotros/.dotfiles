[user]
	name = Silvia Botros
	email = silvia.botros@sendgrid.com
[push]
	default = matching
[color]
  branch = auto
  diff = auto
  interactive = auto
  status = auto
[alias]
  co-pr = !sh -c 'git fetch origin pull/$1/head:pr/$1 && git checkout pr/$1' -
  create-branch = !sh -c 'git push origin HEAD:refs/heads/$1 && git fetch origin && git branch --track $1 origin/$1 && cd . && git checkout $1' -
  delete-branch = !sh -c 'git push origin :refs/heads/$1 && git branch -D $1' -
  merge-branch = !git checkout master && git merge @{-1}
  aa = add --all
  rb = rebase
  mrequest = push -u origin HEAD
  delete-unused-branches = "!f() { git branch | xargs git branch -d; }; f"
	l = log --graph --decorate --all --max-count 5 --name-status
  # Thanks @mrtazz
  lol = log --all --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
  st = status -sb
  lerl = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
  changelog = log --graph --pretty=format:'[%h] -%d %s (%cr) (%an)' --abbrev-commit --no-merges
  df = diff
  rpull = pull --rebase --stat
  pullr = pull --rebase
  unstage = reset
  dfc = diff --cached
  mergemaster = mergetool
  ci = commit -v
  push-with-tags = "!git push && git push --tags"
  pull-with-submodules = "!git pull && git submodule update --init"
  rpull-with-submodules = "!git pull --rebase --stat && git submodule update --init"

  # Credit @sethvargo
  undo = !git reset HEAD~1 --mixed
  amend = !git commit --amend
  top = !git log --format=format:%an | sort | uniq -c | sort -r | head -n 20

  # Credit @jessfraz
  pr = !"pr() { git fetch origin pull/$1/head:pr-$1; git checkout pr-$1; }; pr"


[filter "media"]
	required = true
	clean = git media clean %f
	smudge = git media smudge %f
