ZSH=$HOME/.oh-my-zsh
ZSH_THEME="miloshadzic"  # awesomepanda daveverwer avit blum fwalch gallifrey gozilla kennethreitz kolo mrtazz muse theunraveler wezm

CASE_SENSITIVE="true"

DISABLE_AUTO_TITLE="true"
# Cannot turn this back on until tmux and csshx play nice again
#ZSH_TMUX_AUTOSTART="true"
REPORTTIME=10

plugins=(git brew bundler common-aliases dircycle gitfast git-extras git-flow sudo  z docker last-working-dir)

bindkey "^[[1;3C" forward-word
bindkey "^[[1;3D" backward-word

# Justin is smart
alias :q="exit"

source $ZSH/oh-my-zsh.sh

unsetopt auto_name_dirs
# thanks @whack
setopt append_history            # Append to history on exit, don't overwrite it.
setopt extended_history          # Save timestamps with history
setopt hist_no_store             # Don't store history commands
setopt hist_save_no_dups         # Don't save duplicate history entries
setopt hist_ignore_all_dups      # Ignore old command duplicates (in current session)


# make and cd
function mkcd
{
    dir="$*";
    mkdir -p "$dir" && cd "$dir";
}

function name_dat_tmux
{
  if [ "$TMUX" ]; then
    if [ "$PWD" != "$OLDPWD" ]; then
      OLDPWD="$PWD";
      tmux rename-window ${PWD##*/};
    fi
  fi
}

precmd_functions+='name_dat_tmux'


function ssh {
  if [[ $# == 0 || -z $TMUX ]]; then
    command ssh $@
    return
  fi
  local remote=${${(P)#}#*@*}
  local old_name="$(tmux display-message -p '#W')"
  local renamed=0
  if [[ $remote != -* ]]; then
    renamed=1
    tmux rename-window $remote
  fi
  command ssh $@
  if [[ $renamed == 1 ]]; then
    tmux rename-window "$old_name"
  fi
}


# Check if on Mac
if [[ `uname` == "Darwin" ]]; then
  export BROWSER=open
  export EDITOR=nvim
 # source ~/.dotfiles/API_KEYS
  export GOPATH=~/.go
  export PATH=/usr/local/bin:/usr/local/sbin:/usr/local/share/npm/bin:/usr/local/heroku/bin:$GOPATH:/Applications/android-sdk-macosx/platform-tools:/Applications/android-sdk-macosx/tools:$PATH
  if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi
else
  [[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"
  export PATH=$HOME/.rvm/bin:$PATH
fi
export PATH=/usr/local/bin:$PATH
ssh-add -l &>/dev/null
if [[ $? == 1 ]]; then
  ssh-add &>/dev/null
fi

# Thanks https://github.com/csmcdermott
# This is for the pesky known_hosts error
function delhost() {
  sed -i -e "$@" ~/.ssh/known_hosts
}

# Update local temporary AWS creds
function aws_cred() {
  aws-okta exec "$@" -- env | grep AWS |  sed  -e "s/^/export /g" > /tmp/env-aws; chmod +x /tmp/env-aws; /tmp/env-aws
}

if [ -z $3 ]; then
  LDAP_USER="silvia"
else
  LDAP_USER=$3
fi

#source '/Users/silviabotros/.exports'
source '/Users/silviabotros/.aliases'

# Go code
export GOPATH=$HOME/go

# MySQL prompt
export MYSQL_PS1="[\D]\n\u@\h:\p:[\d]> "

#eval "$(chef shell-init zsh)"
source /Users/silviabotros/.iterm2_shell_integration.zsh
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/shims:$PATH"
if command -v pyenv 1>/dev/null 2>&1; then  eval "$(pyenv init -)" fi
eval "$(starship init zsh)"

#add brew to PATH because..I dunno
export PATH=/opt/homebrew/bin:$PATH
